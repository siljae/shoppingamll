@startuml
title 구매 API 시퀀스 다이어그램

actor 사용자 as User
participant "ApiProductController" as Controller
participant "ProductService" as ProductService
participant "ProductMapper" as ProductMapper
participant "OrderService" as OrderService
participant "OrderMapper" as OrderMapper
database "Database" as DB


User -> Controller : POST /api/products/{productId}/purchase(request)
activate Controller

Controller -> ProductService : reduceStock(request)
activate ProductService

note right of ProductService : 트랜잭션 시작
    ProductService -> ProductMapper : getProductById(id)
    activate ProductMapper
        ProductMapper -> DB : getProductById(id)
        activate DB
        DB --> ProductMapper : Product
        deactivate DB
    ProductMapper --> ProductService : Product
    deactivate ProductMapper

    opt product == null
    ProductService --> Controller : ProductNotFoundException
    note right of ProductService : 예외 발생으로 인한 트랜잭션 종료
    end
    opt product.stock < request.quantity
    ProductService --> Controller : OutOfStockException
    note right of ProductService : 예외 발생으로 인한 트랜잭션 종료
    end

    ProductService -> ProductService : product.setStock(stock - quantity)
    ProductService -> ProductMapper : updateProductStock(product)
    ProductMapper -> DB : updateProduct(product)
    ProductService -> OrderService : addOrder(id)
    activate OrderService
    OrderService -> OrderMapper : insertOrder(order)
    activate OrderMapper
    OrderMapper -> DB : insertOrder(order)
    deactivate OrderMapper
    deactivate OrderService
    ProductService --> Controller : void
    deactivate ProductService
    note right of ProductService : 트랜잭션 종료

Controller --> User : 구매가 완료되었습니다.
deactivate Controller

@enduml